<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="label45.ToolTip" xml:space="preserve">
    <value>Liczba godzin roboczych używania nowego środka transportu - w przypadku jednostek pływających,
 o których mowa w art. 2 pkt 10 lit. b, oraz statków powietrznych, o których mowa w art. 2 pkt 10 lit. c ustawy</value>
  </data>
  <data name="label54.ToolTip" xml:space="preserve">
    <value>W przypadku faktur wystawianych przez drugiego w kolejności podatnika, o którym mowa w art. 135 ust. 1 pkt 4 lit. b i c, 
w wewnątrzwspólnotowej transakcji trójstronnej (procedurze uproszczonej) - dane określone w art. 136, należy podać wartość "true"; 
w przeciwnym przypadku - wartość - "false"</value>
  </data>
  <data name="label58.ToolTip" xml:space="preserve">
    <value>W przypadku dostawy towarów lub świadczenia usług zwolnionych od podatku na podstawie art. 43 ust. 1, art. 113 ust. 1 i 9 
albo przepisów wydanych na podstawie art. 82 ust. 3 należy podać wartość "true"; w przeciwnym przypadku - wartość - "false"</value>
  </data>
  <data name="label59.ToolTip" xml:space="preserve">
    <value>W przypadku dostawy towarów lub wykonania usługi, dla których obowiązanym do rozliczenia podatku,
 podatku od wartości dodanej lub podatku o podobnym charakterze jest nabywca towaru lub usługi
 - wyrazy "odwrotne obciążenie", należy podać wartość "true"; w przeciwnym przypadku - wartość - "false"</value>
  </data>
  <data name="label39.ToolTip" xml:space="preserve">
    <value>Data dokonania lub zakończenia dostawy towarów lub wykonania usługi lub data otrzymania zapłaty, o której mowa w 
art. 106b ust. 1 pkt 4, o ile taka data jest określona i różni się od daty wystawienia faktury</value>
  </data>
  <data name="label36.ToolTip" xml:space="preserve">
    <value>Numer, za pomocą którego nabywca towarów lub usług jest identyfikowany dla podatku lub podatku od wartości dodanej,
 pod którym otrzymał on towary lub usługi, z zastrzeżeniem pkt 24 lit. b ustawy. Pole opcjonalne dla przypadku określonego w art. 106e ust. 5 pkt 2 ustawy.</value>
  </data>
  <data name="label44.ToolTip" xml:space="preserve">
    <value>W przypadku dostawy towarów lub świadczenia usług, w odniesieniu do których obowiązek podatkowy powstaje zgodnie z 
art. 19a ust. 5 pkt 1 lub art. 21 ust. 1 - wyrazy "metoda kasowa", należy podać wartość "true"; w przeciwnym przypadku - wartość - "false"</value>
  </data>
  <data name="label76.ToolTip" xml:space="preserve">
    <value>Dla faktury korygującej - okres, do którego odnosi się udzielany opust lub obniżka, w przypadku gdy podatnik 
udziela opustu lub obniżki ceny w odniesieniu do wszystkich dostaw towarów lub usług dokonanych 
lub świadczonych na rzecz jednego odbiorcy w danym okresie</value>
  </data>
  <data name="label51.ToolTip" xml:space="preserve">
    <value>Jeżeli pole P_106E_3 równa się wartości "true", należy podać wyrazy: "procedura marży - towary używane" lub 
"procedura marży - dzieła sztuki" lub "procedura marży - przedmioty kolekcjonerskie i antyki"</value>
  </data>
  <data name="label52.ToolTip" xml:space="preserve">
    <value>W przypadku dostawy towarów używanych, dzieł sztuki, przedmiotów kolekcjonerskich i antyków, 
dla których podstawę opodatkowania stanowi zgodnie z art. 120 ust. 4 i 5 marża, należy podać wartość "true"; 
w przeciwnym przypadku - wartość -</value>
  </data>
  <data name="label53.ToolTip" xml:space="preserve">
    <value>W przypadku świadczenia usług turystyki, dla których podstawę opodatkowania stanowi zgodnie z art. 119 ust. 1 kwota marży, 
faktura - w zakresie danych określonych w ust. 1 pkt 1-17 - powinna zawierać wyłącznie dane określone w ust. 1 pkt 1-8 i 15-17, 
a także wyrazy "procedura marży dla biur podróży", należy podać wartość "true"; w przeciwnym przypadku - wartość - "false"</value>
  </data>
  <data name="label43.ToolTip" xml:space="preserve">
    <value>Suma wartości sprzedaży zwolnionej. Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy
 (gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true"), a także art. 106e ust. 4 pkt 3 i ust. 5 pkt 1-3 ustawy.</value>
  </data>
  <data name="label40.ToolTip" xml:space="preserve">
    <value>Suma wartości sprzedaży netto ze stawką 0%. Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy
 (gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true"), a także art. 106e ust. 4 pkt 3 i ust. 5 pkt 1-3 ustawy</value>
  </data>
  <data name="label86.ToolTip" xml:space="preserve">
    <value>Stawka podatku. Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy 
(gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true"), a także art. 106e ust.4 pkt 3 i ust. 5 pkt 1-3 ustawy.</value>
  </data>
  <data name="label84.ToolTip" xml:space="preserve">
    <value>Wartość dostarczonych towarów lub wykonanych usług, objętych transakcją, bez kwoty podatku (wartość sprzedaży netto). 
Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy (gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true") 
oraz dla przypadku określonego w art. 106e ust. 5 pkt 3 ustawy.</value>
  </data>
  <data name="label83.ToolTip" xml:space="preserve">
    <value>Kwoty wszelkich opustów lub obniżek cen, w tym w formie rabatu z tytułu wcześniejszej zapłaty, 
o ile nie zostały one uwzględnione w cenie jednostkowej netto. Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy 
(gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true") oraz dla przypadku określonego w art. 106e ust. 5 pkt 1 ustawy.</value>
  </data>
  <data name="label82.ToolTip" xml:space="preserve">
    <value>Cena jednostkowa towaru lub usługi bez kwoty podatku (cena jednostkowa netto). Pole opcjonalne dla przypadków określonych w art. 106e ust.2 i 3 ustawy
 (gdy przynajmniej jedno z pól P_106E_2 i P_106E_3 przyjmuje wartość "true") oraz dla przypadku określonego w art 106e ust. 5 pkt 3 ustawy</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
</root>